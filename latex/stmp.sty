%%%==============================================================================
%% Copyright 2023 by Alceu Frigeri
%%
%% This work may be distributed and/or modified under the conditions of
%%
%% * The [LaTeX Project Public License](http://www.latex-project.org/lppl.txt),
%%   version 1.3c (or later), and/or
%% * The [GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html),
%%   version 3 (or later)
%%
%% This work has the LPPL maintenance status *maintained*.
%%
%% The Current Maintainer of this work is Alceu Frigeri
%%
%% This is version 1.0.1beta (2023/05/01)
%%
%% The list of files that compose this work can be found in the README.md file at
%% https://ctan.org/pkg/democodetools
%%
%%%==============================================================================
\NeedsTeXFormat{LaTeX2e}[2022/06/01]
\def\tc@tmp@packname{stmp}
\def\tc@tmp@altpackname{stmp}
\def\tc@tmp@packdesc{Structured TMP - stmp}
\def\tc@tmp@packdate{2023/05/01}
\def\tc@tmp@packversion{1.0.1beta}
\let\@exp\expandafter
\@exp\edef\csname\tc@tmp@altpackname version\endcsname{\tc@tmp@packversion}
%\@exp\@exp\@exp\ProvidesPackage\@exp\@exp\@exp{\@exp\tc@tmp@packname\@exp}\@exp[\tc@tmp@packdate\space v\tc@tmp@packversion\space\tc@tmp@packdesc]

\RequirePackage{ expl3 , xcolor}
%\cs_new:Npn \txtxt:n #1 {demo #1}
\ProvidesExplPackage
    {stmp}
    {2023/03/01}
    {0.0.1}
    {tmp package for democode tests}

%%%%%%%%%%%%%%%%%%%
%%%%
%%%%  New package
%%%%
%%%%%%%%%%%%%%%%%%%



%\keys_define:nn { stmp }
%{
%
%}

%\ProcessKeyOptions [ stmp ]

%\definecolor{l__stmp_Pack_color}{named}{green!30!black}

%\AtBeginDocument {
\colorlet{l__stmp_Code_color}{blue!40!black}
\colorlet{l__stmp_Syntax_color}{blue!60!black}
\colorlet{l__stmp_Macro_color}{blue!40!black}
\colorlet{l__stmp_Marg_color}{gray!60!black}
\colorlet{l__stmp_Oarg_color}{gray!90!black}
\colorlet{l__stmp_Parg_color}{gray!60!black}
\colorlet{l__stmp_Xarg_color}{gray!60!black}
\colorlet{l__stmp_DefaultVal_color}{blue!60!black}
\colorlet{l__stmp_Default_color}{blue!60!black}
\colorlet{l__stmp_Keys_color}{teal!40!black}
\colorlet{l__stmp_Value_color}{teal!40!black}
\colorlet{l__stmp_Key_color}{teal!40!black}
\colorlet{l__stmp_Options_color}{green!30!black}
\colorlet{l__stmp_Others_color}{green!30!black}
\colorlet{l__stmp_Env_color}{green!30!black}
\colorlet{l__stmp_Pack_color}{green!30!black}
%}


\tl_set:Nn \l__stmp_metafont {\ttfamily}
\tl_set:Nn \l__stmp_metasize {\small}

\keys_define:nn { MetaFormat }
{
  Oarg.usage:n = general,
	Oarg.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Oarg_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Oarg_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Marg.usage:n = general,
	Marg.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Marg_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Marg_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Parg.usage:n = general,
	Parg.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Parg_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Parg_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Xarg.usage:n = general,
	Xarg.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Xarg_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Xarg_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Macro.usage:n = general,
	Macro.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Code_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Code_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Code.usage:n = general,
	Code.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Code_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Code_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Syntax.usage:n = general,
	Syntax.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Syntax_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Syntax_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Key.usage:n = general,
	Key.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Key_color} }
      \tl_set:Nn \l__stmp_metashape 
        { \slshape }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Key_color}
          \l__stmp_metasize
          \l__stmp_metafont
          \slshape
        }
    },
	%
  KeyVal.usage:n = general,
	Key.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Keyval_color} }
      \tl_set:Nn \l__stmp_metashape 
        { \slshape }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_KeyVal_color}
          \l__stmp_metasize
          \l__stmp_metafont
          \slshape
        }
    },
	%
  Option.usage:n = general,
	Option.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Options_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Options_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Default.usage:n = general,
	Default.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Default_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Default_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
	%
  Value.usage:n = general,
	Value.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Value_color} }
      \tl_set:Nn \l__stmp_metashape 
        { \slshape }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Value_color}
          \l__stmp_metasize
          \l__stmp_metafont
          \slshape
        }
    },
	%
  Env.usage:n = general,
	Env.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Env_color} }
      \tl_set:Nn \l__stmp_metashape 
        { \slshape }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Env_color}
          \l__stmp_metasize
          \l__stmp_metafont
          \slshape
        }
    },
	%
  Pack.usage:n = general,
	Pack.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Pack_color} }
      \tl_set:Nn \l__stmp_metashape 
        { \slshape }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Pack_color}
          \l__stmp_metasize
          \l__stmp_metafont
          \slshape
        }
    },
	%
  unknown.usage:n = general,
	unknown.code:n = 
    {
      \tl_set:Nn \l__stmp_metacolor 
        { \color{l__stmp_Others_color} }
      \tl_set:Nn \l__stmp_metashape 
        { }
      \tl_set:Nn \__stmp_metafmt_tl 
        {
          \color{l__stmp_Others_color}
          \l__stmp_metasize
          \l__stmp_metafont
        }
    },
}

\cs_new:Npn \__stmp_format_set:n #1
  {
    \keys_set:nn {MetaFormat}{#1}
    \__stmp_metafmt_tl
  }
  
\cs_new:Npn \__stmp_meta_set:n #1
  {
    \keys_set:nn {MetaFormat}{#1}
  }

\cs_new:Npn \__stmp_meta:n #1
  {
    \ensuremath\langle #1 \ensuremath\rangle
  }  

\cs_new:Npn \__stmp_typemacro:n #1
  {
    \tl_set:Ne \l_tmpb_tl {\tl_to_str:n{#1}}
%    \tl_show:N \l_tmpb_tl
    \regex_replace_all:nnN {\ }{}  \l_tmpb_tl
    \regex_replace_once:nnNTF {TF}{}\l_tmpb_tl
      {
        \l_tmpb_tl\textsl{\underline{TF}}
      }
      { \l_tmpb_tl }  
  }

\cs_generate_variant:Nn \__stmp_typemacro:n {o}

\cs_new:Npn \__stmp_typeset_list:nnnnn #1#2#3#4#5
  {
    
    \seq_set_from_clist:Nn \l_tmpa_seq {#3}
%    \seq_show:N \l_tmpa_seq
    \bool_set:Nn \l__stmp_bool {\seq_if_empty_p:N \l_tmpa_seq}
    \tl_set:Nn \l__stmp_middle_tl {}
    \tl_set:Nn \l__stmp_lastone_tl {}
    \bool_until_do:Nn \l__stmp_bool 
      {
        \seq_pop_left:NNTF \l_tmpa_seq \l_tmpa_tl
          {
            \seq_if_empty:NTF \l_tmpa_seq
              {
                \l__stmp_lastone_tl
                {
                  \__stmp_format_set:n {#1}
                  #2 \l_tmpa_tl
                }
                \bool_set_true:N \l__stmp_bool
              }
              {
                \l__stmp_middle_tl                
                {
                  \__stmp_format_set:n {#1}
                  #2 \l_tmpa_tl
                }
                \tl_set:Nn \l__stmp_middle_tl {#4}
                \tl_set:Nn \l__stmp_lastone_tl {#5}
              }
          }
          {}
      }
    
%   
%    \seq_set_map:NNn \l_tmpc_seq \l_tmpa_seq {\__stmp_typemacro:n ##1}                                  
%    \seq_show:N \l_tmpc_seq
%    \group_begin:
%      \__stmp_format_set:n {Code}
%      \seq_use:Nnnn \l_tmpc_seq {~and~}{,~}{~and~}
%    \group_end:        
  }


\cs_new:Npn \__stmp_arg:nnnn #1#2#3#4
  {
    \group_begin:
      \__stmp_format_set:n {#1}
      #2
      \__stmp_meta:n { #3 }
      #4
    \group_end:    
  }

\cs_new:Npn \__stmp_args:nnnn #1#2#3#4
  {
    \seq_set_from_clist:Nn \l_tmpa_seq {#3}
    \group_begin:
      \__stmp_format_set:n {#1}
      \seq_map_inline:Nn \l_tmpa_seq {#2 \__stmp_meta:n {##1} #4}                                  
    \group_end:    
  }
  
\cs_new:Npn \__stmp_val:nn #1#2
  {
    \group_begin:
      \__stmp_format_set:n {#1}
      #2 
    \group_end:    
  }

\NewDocumentCommand{\DCval}{O{Code}m}
  {
    \__stmp_val:nn {#1}{#2}
  }

\NewDocumentCommand{\DCarg}{O{Code}mmm}
  {
    \__stmp_arg:nnnn {#1}{#2}{#3}{#4}
  }

\NewDocumentCommand \oarg {m}
  {
    \__stmp_arg:nnnn {Oarg} [ {#1} ]
  }
  
\NewDocumentCommand \oargs {m}
  {
    \__stmp_args:nnnn {Oarg} [ {#1} ]
  }

  
\NewDocumentCommand \meta {m} {\__stmp_meta:n {#1}}
%\ProcessKeyOptions [ stmp ]

\NewDocumentCommand \fmtTest {m} {\keys_set:nn {MetaFormat}{#1}}

\NewDocumentCommand \formatX {} {\__stmp_metafmt_tl}

%\NewDocumentCommand \Macros {m} {\__stmp_macros{#1}}

\NewDocumentCommand \DCMacros {m} {\__stmp_typeset_list:nnnnn{Code}{\__stmp_typemacro:o}{#1}{,~}{~and~}}

\NewDocumentCommand \Vals {m} {\__stmp_typeset_list:nnnnn{Value}{}{#1}{,~}{~and~}}

%\cs_new:Npn \DCMacros #1 {\__stmp_macros:n{#1}}
