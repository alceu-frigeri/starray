%%%==============================================================================
%% Copyright 2023-present by Alceu Frigeri
%%
%% This work may be distributed and/or modified under the conditions of
%%
%% * The [LaTeX Project Public License](http://www.latex-project.org/lppl.txt),
%%   version 1.3c (or later), and/or
%% * The [GNU Affero General Public License](https://www.gnu.org/licenses/agpl-3.0.html),
%%   version 3 (or later)
%%
%% This work has the LPPL maintenance status *maintained*.
%%
%% The Current Maintainer of this work is Alceu Frigeri
%%
%% This is version {1.11} {2025/10/26} 
%%
%% The list of files that compose this work can be found in the README.md file at
%% https://ctan.org/pkg/starray
%%
%%%==============================================================================
\NeedsTeXFormat{LaTeX2e}[2023/11/01]


\ProvidesExplPackage
    {stdemo}
    {2025/10/26}
    {1.11}
    {A starray based demo package}


%%%%%%%
%%%
%%% Just an attempt of having my packages info in a regular way
%%% \pkginfo_set:nn {<pkg-name>} { props} for each and all.
%%%
%%%%%%%
\RequirePackage{pkginfograb}
\pkginfograb_set:nn { stdemo }
  {
     name        = {stdemo} ,
     prefix      = {stdemo} ,
     date        = {2025/10/26},
     version     = {1.11} ,
     description = {A starray based demo package}
  }
%%%%%%%
%%% End of cut-n-paste
%%%%%%%


\RequirePackage{starray} % For array definitions



\msg_new:nnnn {st demo} {unknown key}
  {
    Invalid~ key:~ '#1'
  }
  {
    Key~ not~ known: ~ '#1'
  }

\cs_generate_variant:Nn \msg_warning:nnn {nnx}

\keys_define:nn  { st demo  }
  {
    firstname .usage:n = general ,
    firstname .tl_set:N = \l_firstname_tl ,
    firstname .default:n = {} ,
    
    lastname .usage:n = general ,
    lastname .tl_set:N = \l_lastname_tl ,
    lastname .default:n = {} ,
    
    kthid .usage:n = general ,
    kthid .tl_set:N = \l_kthid_tl ,
    kthid .default:n = {} ,

    organization .usage:n = general ,
    organization .tl_set:N = \l_organization_tl ,
    organization .default:n = {} ,

    email .usage:n = general ,
    email .tl_set:N = \l_email_tl ,
    email .default:n = {} ,

    school .usage:n = general ,
    school .tl_set:N = \l_school_tl ,
    school .default:n = {} ,

    department .usage:n = general ,
    department .tl_set:N = \l_department_tl ,
    department .default:n = {} ,
       
    % not very efficient, but quick to write...
    default .usage:n = general ,
    default .meta:nn = {st test}
      { firstname , lastname, kthid, organization, email, school, department } ,
      
    unknown .code:n =
      {
        \msg_warning:nnx 
          {st test} {unknown key}
          {Unknown~ supervisor~ key:~ \l_keys_key_str}
      } ,
    unknown .default:V = \c_novalue_tl

  }



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
% starray based student commands%
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\dim_const:Nn \l__stdemo_ID_rule_dim {30mm}
\dim_const:Nn \l__stdemo_email_rule_dim {40mm}
\dim_const:Nn \l__stdemo_name_rule_dim {50mm}
\dim_const:Nn \l__stdemo_title_rule_dim {30mm}
\dim_const:Nn \l__stdemo_worktitle_rule_dim {60mm}
\dim_const:Nn \l__stdemo_agree_rule_dim {25mm}
\dim_const:Nn \l__stdemo_date_rule_dim {15mm}
\dim_const:Nn \l__stdemo_register_rule_dim {20mm}
\dim_const:Nn \l__stdemo_office_rule_dim {25mm}
\dim_const:Nn \l__stdemo_field_rule_dim {30mm}

\starray_new:n {student}
\starray_def_from_keyval:nn {student}
 {
  hash = , %% this shall be self hash (if any)
  first = ,
  last = ,
  name = \rule{\l__stdemo_name_rule_dim}{.1pt} ,
  ID    = \rule{\l__stdemo_ID_rule_dim}{.1pt} , 
  email = \rule{\l__stdemo_email_rule_dim}{.1pt} ,
  worktitle = \rule{\l__stdemo_worktitle_rule_dim}{.1pt} ,
  remarks = ,
  board-local = {~local/place~} ,
  board-date   = {~date~} ,
  board-time  = {~time~} ,
  grade = 0 ,
  flag-graded = \c_false_bool , %%% IF grade already calculated (or defined)
  flag-approved = \c_false_bool ,
  flag-coadvisor = \c_false_bool ,
  advisor . struct = {
    first = ,
    last =  ,
    name = \rule{\l__stdemo_name_rule_dim}{.1pt},
    institution = \rule{\l__stdemo_name_rule_dim}{.1pt},
    title = \rule{\l__stdemo_title_rule_dim}{.1pt} ,
    email = \rule{\l__stdemo_email_rule_dim}{.1pt} ,
  } ,
  coadvisor . struct = {
    first = ,
    last =  ,
    name = \rule{\l__stdemo_name_rule_dim}{.1pt},
    institution = \rule{\l__stdemo_name_rule_dim}{.1pt},
    title = \rule{\l__stdemo_title_rule_dim}{.1pt} ,
    email = \rule{\l__stdemo_email_rule_dim}{.1pt} ,
  } ,
  reviewer . struct = {
    first = ,
    last =  ,
    name = \rule{\l__stdemo_name_rule_dim}{.1pt},
    institution = \rule{\l__stdemo_name_rule_dim}{.1pt},
    title = \rule{\l__stdemo_title_rule_dim}{.1pt} ,
    email = \rule{\l__stdemo_email_rule_dim}{.1pt} ,
    pointA = ,
    pointB = ,
    pointC = ,
    pointD = ,
    grade = 0 ,
    flag-set = \c_false_bool , 
  } ,
 }


\prop_new_linked:N \l__stdemo_forms_prop

\starray_new:n {activity}
\starray_def_from_keyval:nn {activity}
  {
    name = Activity's~ name ,
    acronym = ACRO ,
    coord . struct = 
      {
        name = Coordinator's~ name,
        title = Coordinator's~ title ,
      } ,
    calendar . struct =
      {
        date = {-day-} ,
        week = {-week-} ,
        event = {-event-} ,
      } ,
    chkID = ,        %%% 'unique ID' for checklists
    chkmarked = ,    %%% This shall be a prop list of   marked itens
    chkunmarked = ,  %%% This shall be a prop list of unmarked itens
    chkref = ,       %%% This shall be a prop list of ref      itens
  }



\NewDocumentCommand{\eDataSet}{m}{
  \starray_term_parser:n{#1}
}  

\cs_new:Npn \eDataFields #1 
  { \starray_parsed_get_prop:n{#1} }


\NewDocumentCommand{\DataField}{mm}{
  \starray_get_prop:nn{#1}{#2}
}  

\NewDocumentCommand{\DataGet}{mmm}{
  \starray_get_prop:nnN{#1}{#2}{#3}
}  


\tl_new:N \l__stdemo_tmpID_tl

\NewDocumentCommand{\NewActivity}{mmm} {
    \starray_new_term:nn  {activity}{#1}
    \starray_set_prop:nnn {activity}{acronym}{#2}
    \starray_set_prop:nnn {activity}{name}{#3}
    \starray_new_term:nn  {activity.coord}{}
    \starray_get_unique_id:nN {activity} \l__stdemo_tmpID_tl
    \starray_gset_prop:nnV {activity}{chkID} \l__stdemo_tmpID_tl
    \prop_new_linked:c {l__stdemo_ \l__stdemo_tmpID_tl _chkmarked_prop}
    \prop_new_linked:c {l__stdemo_ \l__stdemo_tmpID_tl _chkunmarked_prop}
    \prop_new_linked:c {l__stdemo_ \l__stdemo_tmpID_tl _chkref_prop}
}

 
\NewDocumentCommand{\ActivitySetCoord}{O{}mm}{
  \tl_if_blank:nTF {#1}
    {
      \starray_gset_prop:nnn {activity.coord}{title}{#2}
      \starray_gset_prop:nnn {activity.coord}{name}{#3}
    }
    {
      \starray_gset_prop:nnn {activity[#1].coord}{title}{#2}
      \starray_gset_prop:nnn {activity[#1].coord}{name}{#3}
    }
}



\NewDocumentCommand{\ActivitySetNewEvent}{O{}mm}{
  \tl_if_blank:nTF {#1}
    {
      \starray_new_term:nn {activity.calendar}{#2}
      \starray_gset_prop:nnn {activity.calendar}{event}{#3}
    }
    {
      \starray_new_term:nn {activity[#1].calendar}{#2}
      \starray_gset_prop:nnn {activity[#1].calendar}{event}{#3}
    }
}

\NewDocumentCommand{\ActivitySetEventDay}{O{}mmm}{
  \tl_if_blank:nTF {#1}
    {
      \starray_gset_from_keyval:nn {activity.calendar[#2]}
        {
            date = {#3} ,
            week = {#4} ,
        }
    }
    {
      \starray_gset_from_keyval:nn {activity[#1].calendar[#2]}
        {
            date = {#3} ,
            week = {#4} ,
        }
    }
}


\cs_new_protected:Npn \__stdemo_checkedbox: 
  {  $\checkmark$  }

\cs_new_protected:Npn \__stdemo_uncheckedbox: 
  {  $\square$  }

\tl_new:N \l__stdemo_chkID_tl
\tl_new:N \l__stdemo_chkIDa_tl
\tl_new:N \l__stdemo_chkIDb_tl

\NewDocumentCommand{\checkdef}{mmm}{
  \starray_get_prop:nnN {activity}{chkID}\l__stdemo_chkID_tl
  \prop_gput:cnn {l__stdemo_ \l__stdemo_chkID_tl _chkmarked_prop} {#1}{\__stdemo_checkedbox:~\ #3}
  \prop_gput:cnn {l__stdemo_ \l__stdemo_chkID_tl _chkunmarked_prop} {#1}{\__stdemo_uncheckedbox:~\ #3}
  \prop_gput:cnn {l__stdemo_ \l__stdemo_chkID_tl _chkref_prop} {#2}{#1}
}

\cs_generate_variant:Nn \prop_gput:Nnn {Nee}


\tl_new:N \l__stdemo_checkB_tl
\tl_new:N \l__stdemo_checkref_tl
\NewDocumentCommand{\checklist}{O{}m}{
  \tl_if_blank:nF {#1}
    {  \starray_set_iter_from_hash:nn {activity}{#1}  }

  \starray_get_prop:nnN {student}  {chkID} \l__stdemo_chkIDa_tl
  \starray_get_prop:nnN {activity} {chkID} \l__stdemo_chkIDb_tl

  \clist_map_inline:nn {#2}
    {
      \prop_get:cnNT {l__stdemo_ \l__stdemo_chkIDb_tl _chkref_prop} {##1} \l__stdemo_checkref_tl
        {
          \prop_get:ceN {l__stdemo_ \l__stdemo_chkIDb_tl _chkmarked_prop} {\l__stdemo_checkref_tl} \l__stdemo_checkB_tl
          \prop_gput:cee {l__stdemo_ \l__stdemo_chkIDa_tl _checklist_prop} {\l__stdemo_checkref_tl} {\l__stdemo_checkB_tl}
        }
    }
}




\tl_new:N \l__stdemo_tmpx_tl
\tl_new:N \l__stdemo_tmpy_tl
\tl_new:N \l__stdemo_table_tl


%\cs_new_protected:Npn \__stdemo_checktable_lines:nn #1#2 {
\NewDocumentCommand{\StudentCheckListTable}{mm}
  {
    \starray_get_prop:nnN {student}  {chkID} \l__stdemo_chkIDa_tl
    \starray_get_prop:nnN {activity} {chkID} \l__stdemo_chkIDb_tl
%    \tl_show:N \l__stdemo_chkIDa_tl
%    \tl_show:N \l__stdemo_chkIDb_tl
    {
      \prop_map_inline:cn {l__stdemo_ \l__stdemo_chkIDa_tl _checklist_prop}
        { \prop_put:cnn {l__stdemo_ \l__stdemo_chkIDb_tl _chkunmarked_prop} {##1}{##2}  }  
    
      \tl_gclear:N \l__stdemo_table_tl
      \clist_map_inline:nn {#1}    
        { 
          \tl_gclear:N \l_tmpa_tl    
          \clist_map_inline:nn {#2}
            {       
             \tl_gset:Nn \l__stdemo_tmpx_tl {##1####1} 
             \prop_get:ceNTF {l__stdemo_ \l__stdemo_chkIDb_tl _chkunmarked_prop} {\l__stdemo_tmpx_tl} \l__stdemo_tmpy_tl
               {\tl_gput_right:Ne \l__stdemo_table_tl {\l_tmpa_tl~ \l__stdemo_tmpy_tl}}
               {\tl_gput_right:Ne \l__stdemo_table_tl {\l_tmpa_tl~ }}
             \tl_gset:Nn \l_tmpa_tl {~&~}
            }
          \tl_gput_right:Nn \l__stdemo_table_tl {\\*}
        }
      }
      \l__stdemo_table_tl   
  }


\NewDocumentCommand{\ActivitySelect}{m}{ \starray_set_iter_from_hash:nn {activity}{#1} }



\NewDocumentCommand{\ActivityCalendarIterate}{+m}{
    \starray_iterate_over:nn{activity.calendar}{#1}
}



\NewDocumentCommand{\student}{O{}mmmm}{%
  \tl_if_blank:nTF {#1}
    {\starray_new_term:nn {student}{}}
    {\starray_new_term:nn {student}{#1}}
  \starray_gset_from_keyval:nn {student}
    {
      hash  = {#1} ,
      first = {#3} ,
      last = {#2} ,
      name = {#3~ #2} ,
      ID   = {#4} ,
      email   = {\tl_to_str:n{#5}} 
    }

  \starray_get_unique_id:nNTF {student}\l__stdemo_tmpID_tl
    {}
    {}
  \starray_gset_prop:nnV {student}{chkID} \l__stdemo_tmpID_tl
  \prop_new:c {l__stdemo_ \l__stdemo_tmpID_tl _checklist_prop}
}%

\NewDocumentCommand{\studentremark}{m}{
  \starray_gset_prop:nnn {student}{remarks}{#1}
}

\NewDocumentCommand{\worktitle}{m}{%%
  \starray_gset_prop:nnn {student}{worktitle}{#1}
}

\NewDocumentCommand{\advisor}{O{}mm}{%%
  \starray_new_term:nn {student.advisor}{}
  \__stdemo_set_prof:nnnn {advisor}{#1}{#2}{#3}
}

\NewDocumentCommand{\coadvisor}{O{}mm}{%%
  \starray_new_term:nn {student.coadvisor}{}
  \starray_gset_prop:nnn {student}{flag-coadvisor}{\c_true_bool}
  \__stdemo_set_prof:nnnn {coadvisor}{#1}{#2}{#3}
}

\NewDocumentCommand{\examiner}{O{}mm}{%%
  \starray_new_term:nn {student.reviewer}{}
  \starray_gset_prop:nnn {student.reviewer}{flag-set}{\c_true_bool}
  \__stdemo_set_prof:nnnn {reviewer}{#1}{#2}{#3}
}%

\cs_new_protected:Npn \__stdemo_set_prof:nnnn #1#2#3#4
  {
    \tl_if_blank:nTF {#2}
      {
        \starray_gset_from_keyval:nn {student.#1}
          {
            last = {#3} ,
            first = {#4} ,
            name = {#4~ #3} ,
          }
      }
      {
        \starray_gset_from_keyval:nn {student.#1}
          {
            last = {#3} ,
            first = {#4} ,
            name = {#2~ #4~ #3} ,
          }
      }
  }

\NewDocumentCommand{\advisorinfo}{mmm}{%%
  \__stdemo_set_prof_info:nnnn {advisor}{#1}{#2}{#3}
}%

\NewDocumentCommand{\coadvisorinfo}{mmm}{%%
  \__stdemo_set_prof_info:nnnn {coadvisor}{#1}{#2}{#3}
}%

\NewDocumentCommand{\examinerinfo}{mmm}{%%
  \__stdemo_set_prof_info:nnnn {reviewer}{#1}{#2}{#3}
}%


\cs_new_protected:Npn \__stdemo_set_prof_info:nnnn #1#2#3#4
  {
    \starray_gset_from_keyval:nn {student.#1}
      {
        institution = {#2} ,
        title = {#3} ,
        email = {\tl_to_str:n{#4}} ,
      }
  }


\cs_generate_variant:Nn \starray_gset_prop:nnn {nne}

\NewDocumentCommand{\examinergrades}{O{A}mmmm} {
  \tl_if_blank:nTF {#2}
    { 
      \starray_gset_prop:nnn {student.reviewer}{grade}{0} 
    }
    {
      \starray_gset_from_keyval:nn {student.reviewer}
        {
          pointA = #2 ,
          pointB = #3 ,
          pointC = #4 ,
          pointD = #5 ,
        }
      \str_case:nnF {#1}
        {
          {A} 
            {
              \starray_gset_prop:nne {student.reviewer}{grade}
                {
                  \fp_eval:n{round((#2  + #3 + #4 + #5) / 4 , 2 , 1) }
                }    
            }
          {B} 
            {
              \starray_gset_prop:nne {student.reviewer}{grade}
                {
                  \fp_eval:n{round((#2  + #3 + #4) / 3 , 2 , 1) }
                }    
            }
        }
        {
          \starray_gset_prop:nne {student.reviewer}{grade}
            {
              \fp_eval:n{round((#2  + #3 + #4 + #5) / 4 , 2 , 1) }
            }    
        }
      
    }
  }

\NewDocumentCommand{\studentgrade}{O{A}m}
  { %assuming there are 3 of them...
    \starray_get_prop:nnN {student.reviewer[1]}{grade} \l__stdemo_A_tl
    \starray_get_prop:nnN {student.reviewer[2]}{grade} \l__stdemo_B_tl
    \starray_get_prop:nnN {student.reviewer[3]}{grade} \l__stdemo_C_tl
    \str_case:nnF {#1}
      {
        {A} 
          {
            \starray_gset_prop:nne {student}{grade}
              {
                \fp_eval:n{round((\l__stdemo_A_tl + \l__stdemo_B_tl + \l__stdemo_C_tl) / 3 , 2 , 1) }
              }    
          }
        {B} 
          {
            \starray_gset_prop:nne {student}{grade}
              {
                \fp_eval:n{round((\l__stdemo_A_tl + \l__stdemo_B_tl) / 2 , 2 , 1) }
              }    
          }
        {C} 
          {
            \starray_gset_prop:nne {student}{grade}
              {
                \fp_eval:n{round(3 / (1/\l__stdemo_A_tl + 1/\l__stdemo_B_tl + 1/\l__stdemo_C_tl) , 2 , 1) }
              }    
          }
      }
      {
        \starray_gset_prop:nne {student}{grade}
          {
            \fp_eval:n{round((\l__stdemo_A_tl + \l__stdemo_B_tl + \l__stdemo_C_tl) / 3 , 2 , 1) }
          }    
      }
    \starray_get_prop:nnN {student}{grade} \l__stdemo_tmp_fp
    \fp_compare:nNnTF {\l__stdemo_tmp_fp} < {#2}
      {
        \starray_gset_prop:nnn {student}{flag-approved}{\c_false_bool}
      }
      {
        \starray_gset_prop:nnn {student}{flag-approved}{\c_true_bool}
      }
    \starray_gset_prop:nnn {student}{flag-graded}{\c_true_bool}
  }


\NewDocumentCommand{\studentselect}{m} { 
    \starray_set_iter_from_hash:nn {student}{#1} 
  }


\NewDocumentCommand{\studentReviewerSelect}{m} {
    \starray_set_iter:nn {student.reviewer}{#1}
  }

\NewDocumentCommand{\studentAdvCase}{mm} {
    \starray_term_parser:n{student.advisor}
    \int_compare:nNnTF {\starray_parsed_get_cnt:} > {1}
      {#1}
      {#2}
  }

\NewDocumentCommand{\studentCoadvCase}{+m+m} {
    \starray_term_parser:n{student}
    \bool_if:nTF {\starray_parsed_get_prop:n{flag-coadvisor}}
      {#1}
      {#2}
  }

\NewDocumentCommand{\studentReviewerSetCase}{mmm} {
    \starray_term_parser:n{student.reviewer[#1]}
    \bool_if:nTF {\starray_parsed_get_prop:n{flag-set}}
      {#2}
      {#3}
}


\NewDocumentCommand{\studentCase}{mm} {
    \starray_term_parser:n{student}
    \bool_if:nTF{\starray_parsed_get_prop:n{flag-approved}}
      {#1}
      {#2}
}


\NewDocumentCommand{\studentiterate}{+m} {
    \starray_iterate_over:nn{student}{#1}
}

\NewDocumentCommand{\studentadvisoriterate}{+m} {
    \starray_iterate_over:nn{student.advisor}{#1}
}


\cs_new_protected:Npn \__stdemo_emptyterm_if_none:nnn #1#2#3
  {
    \starray_get_cnt:nN {#2} \l_tmpa_int
    \int_while_do:nNnn {\l_tmpa_int} < {#1}
      { 
        \starray_new_term:nn {#2}{} 
        #3
        \starray_get_cnt:nN {#2} \l_tmpa_int
      }
  }

\NewDocumentCommand{\emptytermifnone}{O{1}mO{}}
  {
    \__stdemo_emptyterm_if_none:nnn {#1}{#2}{#3}
  }

\cs_new_protected:Npn \__stdemo_student_emptyfields_if_none:
  {
    \__stdemo_emptyterm_if_none:nnn {1}{student}{}
    \__stdemo_emptyterm_if_none:nnn {1}{student.advisor}{}
    \__stdemo_emptyterm_if_none:nnn {3}{student.reviewer}{}
  }


\NewDocumentCommand{\emptyfields}{} {
    \__stdemo_emptyfields:
  }

\cs_new_protected:Npn \__stdemo_emptyfields:
  {
    \starray_new_term:nn {student}{empty}
    \starray_new_term:nn {student.advisor}{}
    \starray_new_term:nn {student.coadvisor}{}
    \starray_new_term:nn {student.reviewer}{}
    \starray_new_term:nn {student.reviewer}{}
    \starray_new_term:nn {student.reviewer}{}
  }


\cs_generate_variant:Nn \seq_gput_right:Nn {ce}

\NewDocumentCommand{\studentaddtolist}{m}
  {
    \seq_if_exist:cF {l__stdemo_#1_list_seq}
      {
        \seq_new:c {l__stdemo_#1_list_seq}

        \bool_new:c {l__stdemo_#1_classified_bool}
      }
    \bool_set_false:c {l__stdemo_#1_classified_bool}  
    \starray_term_parser:n {student}
    \seq_gput_right:ce {l__stdemo_#1_list_seq} {\starray_parsed_get_prop:n {hash}}
  }
  
\NewDocumentCommand{\studentlistsort}{O{name}m}
  {
    \bool_set_true:c {l__stdemo_#2_classified_bool}
    \__stdemo_seq_sort:nn {#2}{#1} 
 }


\tl_new:N \l__stdemo_sortA_tl
\tl_new:N \l__stdemo_sortB_tl
\cs_new_protected:Npn \__stdemo_seq_sort:nn #1#2
  {
    \seq_gsort:cn {l__stdemo_#1_list_seq }
      {
        \starray_set_iter_from_hash:nn {student}{##1}
        \starray_get_prop:nnN {student}{#2} \l__stdemo_sortA_tl
        \starray_set_iter_from_hash:nn {student}{##2}
        \starray_get_prop:nnN {student}{#2} \l__stdemo_sortB_tl          
        \str_compare:eNeTF { \l__stdemo_sortA_tl } > { \l__stdemo_sortB_tl }
          { \sort_return_swapped: }
          { \sort_return_same: }
      }  
  }

\NewDocumentCommand{\listemptytermsifnone}{m}
  {
   \seq_map_inline:cn {l__stdemo_#1_list_seq}
      {
%        \tl_show:n {and:(##1)}
        \starray_set_iter_from_hash:nn {student}{##1}
     
        \emptytermifnone{student.advisor}
        \emptytermifnone[3]{student.reviewer}
%        % those could be, instead
%        \__stdemo_emptyterm_if_none:nnn {1}{ student.advisor } {}
%        \__stdemo_emptyterm_if_none:nnn {3}{ student.reviewer } {}
      }       
  }


\NewDocumentCommand{\studentlistiterate}{m+m}
  {
%    \tl_show:n {Hum:(#1)}
    \bool_if:cF {l__stdemo_#1_classified_bool}
      { \studentlistsort{#1} }
    \listemptytermsifnone{#1}
    \seq_map_inline:cn {l__stdemo_#1_list_seq}
      {
%        \tl_show:n {what:(##1)}
        \starray_set_iter_from_hash:nn {student}{##1}
        #2
      }
  }


\def\emptybox{\framebox[3em]{\color{white}W}}
  
